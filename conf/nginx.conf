
#user  nobody;
error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;
pid        logs/nginx.pid;


#ワーカプロセス数（他の処理の様子を見て増やす）
worker_processes  1;
worker_rlimit_nofile 8192;

events {
    worker_connections  4096;
}


http {
    include       mime.types;

    default_type  application/octet-stream;

    log_format ltsv "time:$time_local"
        "\thost:$remote_addr"
        "\tforwardedfor:$http_x_forwarded_for"
        "\treq:$request"
        "\tmethod:$request_method"
        "\turi:$request_uri"
        "\tstatus:$status"
        "\tsize:$body_bytes_sent"
        "\treferer:$http_referer"
        "\tua:$http_user_agent"
        "\treqtime:$request_time"
        "\truntime:$upstream_http_x_runtime"
        "\tapptime:$upstream_response_time"
        "\tcache:$upstream_http_x_cache"
        "\tvhost:$host"
        ;
    access_log  logs/access.log ltsv;

    sendfile        on; #カーネル空間でファイルのIOを行う(仮想環境だとhuguaigaokiyasui)
    tcp_nopush     on;  #パケットをまとめてtcpパケットを減らす
    #keepalive_timeout  0;
    #keepalive_timeout  65;
    gzip  on;
    #charset koi8-r;

# 	upstream backends {
#		# keepalive 32;
#
#		## 振り分け方法
#		# least_conn;
#		# ip_hash;
#
# 		## 括弧内の値はDefault
# 		## server address [weight=1] [max_fails=1] [fail_timeout=10s] [backup] [down]
# 		server 192.168.1.10 weight=1 fail_timeout=30s;
# 		server 192.168.1.11 weight=1 fail_timeout=30s;
# 	}

    server {
        listen       10500;
        server_name  localhost;
        client_max_body_size 10m;
        root /home/isucon/private_isu/webapp/public/;


        location / {
            try_files $uri @app;
        }

        #クライアントに以下の拡張子のファイルをキャッシュするように指示する
        #キャッシュさせても毎回サーバに更新を確認に来させている
        # location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        #    try_files $uri @app;
        #    expires max;
        #    add_header Pragma public;
        #    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        #    etag off;
        #  }

        location @app {
            proxy_redirect          off;
            client_max_body_size    10m;
            client_body_buffer_size 128k;
            proxy_buffers           32 4k;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://localhost:8080;
        }


    }


    #もしSSLが必要な時は以下を参考にする
    #その場合は鯖にある最初の設定を消さないこと
    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
